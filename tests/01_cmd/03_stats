Testing the stats module.

-- Testcase --
{%
	let real_include = include;
	let real_print = print;
	let fs = require("fs");

	include("./cmd/cmd.uc", {
		TRACE_CALLS: "stdout",

		/* wrap include() to fixup the state.uc include path */
		include: function(path, scope) {
			if (path == "./state.uc")
				path = "../sys/state.uc";

			/* make path absolute */
			if (index(path, "/") != 0) {
				try {
					die();
				} catch(e) {
					path = replace(e.stacktrace[1].filename, /\/[^\/]+$/, '') + '/' + path;
				};
			}

			return real_include(path, scope);
		}
	})
%}
-- End --

-- Environment --
{ "cmd": { "command": "stats", "payload": { } }, "cfg": { } }
-- End --

-- Expect stdout --
[call] ubusconn.call object <system> method <info> args <null>
[call] ubusconn.call object <wifi> method <iface> args <null>
[call] ubusconn.call object <wifi> method <station> args <null>
[call] ubusconn.call object <poe> method <info> args <null>
[call] ubusconn.call object <topology> method <mac> args <null>
[call] ubusconn.call object <topology> method <port> args <null>
[call] fs.popen cmdline <lldpcli -f json show neighbors> mode <null>
[call] ubusconn.call object <network.interface.wan> method <status> args <null>
[call] ubusconn.call object <network.interface> method <status> args <{ "interface": "lan" }>
[call] ubusconn.call object <network.interface> method <status> args <{ "interface": "nat200" }>
[call] system command <[ "/usr/sbin/dnsprobe", "-s", "127.0.0.1" ]> timeout <null>
[call] system command <[ "/usr/sbin/dnsprobe", "-s", "192.168.26.1" ]> timeout <null>
[call] system command <[ "/usr/sbin/dnsprobe", "-s", "192.168.1.1" ]> timeout <null>
[call] system command <[ "/usr/sbin/dnsprobe", "-s", "192.168.16.1" ]> timeout <null>
[call] system command <[ "/usr/sbin/dhcpdiscover", "-i", "br-wan", "-t", "5" ]> timeout <null>
[call] system command <[ "/usr/sbin/dhcpdiscover", "-i", "br-lan", "-t", "5" ]> timeout <null>
[call] system command <[ "/usr/sbin/dhcpdiscover", "-i", "br-nat200", "-t", "5" ]> timeout <null>
[call] ubusconn.call object <ucentral> method <stats> args <{ "serial": "001122334455", "state": { /* 6 keys */ }, "uuid": null }>
{ "lldp": { /* 1 keys */ }, "neighbours": { /* 10 keys */ }, "system": { /* 5 keys */ }, "traffic": { /* 16 keys */ }, "wifi-iface": { /* 4 keys */ }, "wifi-station": { /* 1 keys */ } }
[call] fs.open path </tmp/ucentral.state> mode <w>
-- End --
